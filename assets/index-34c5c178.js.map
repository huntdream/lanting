{"version":3,"file":"index-34c5c178.js","sources":["../../src/utils/createUID.ts","../../src/components/Toast/ToastBar.tsx","../../src/components/Toast/Toaster.tsx","../../src/components/Toast/Toasts.tsx","../../src/components/Toast/index.tsx"],"sourcesContent":["const createUID = () =>\n  crypto.randomUUID().split('-')[0]\n\nexport default createUID;\n","import React, { AnimationEvent, ReactNode } from 'react';\nimport cls from 'classnames';\nimport './style.scss';\nimport Icon from 'components/Icon';\n\ninterface Props {\n  id: string;\n  text: ReactNode;\n  showProgress?: boolean;\n  playState?: string;\n  close?: boolean;\n  closing: boolean;\n  onClose: (id: string) => void;\n  onStartClose: () => void;\n}\n\nconst ToastBar: React.FC<Props> = ({\n  id,\n  text,\n  showProgress,\n  close,\n  closing,\n  playState,\n  onClose,\n  onStartClose,\n}) => {\n  const handleAnimationEnd = (e: AnimationEvent<HTMLDivElement>) => {\n    if (e.target !== e.currentTarget || !closing) {\n      return;\n    }\n\n    onClose(id);\n  };\n\n  return (\n    <div\n      className={cls('lanting-toast-bar', {\n        'lanting-toast-bar--slideout': closing,\n      })}\n      onAnimationEnd={handleAnimationEnd}\n    >\n      <div className='lanting-toast-bar-content'>{text}</div>\n      {close && <Icon onClick={onStartClose} name='close' />}\n      {showProgress && (\n        <div\n          className='lanting-toast-progress'\n          style={{ animationPlayState: playState }}\n        ></div>\n      )}\n    </div>\n  );\n};\n\nexport default ToastBar;\n","import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport cls from 'classnames';\nimport './style.scss';\nimport ToastBar from './ToastBar';\n\nexport type Position =\n  | 'top'\n  | 'top-right'\n  | 'top-left'\n  | 'bottom'\n  | 'bottom-right'\n  | 'bottom-left';\n\nexport interface IToastConfig {\n  id: string;\n  text: ReactNode;\n  close?: boolean;\n  timeout?: number;\n  height?: number;\n  position: Position;\n  showProgress?: boolean;\n}\n\ninterface Props extends IToastConfig {\n  offset: number;\n  onClose: (id: string) => void;\n  updateHeight: (id: string, height: number) => void;\n}\n\nconst Toaster: React.FC<Props> = ({\n  id,\n  text,\n  close,\n  offset,\n  position = 'top',\n  timeout = 3000,\n  showProgress,\n  updateHeight,\n  onClose,\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const now = useRef(Date.now());\n  const timer = useRef<number>(0);\n  const [wait, setWait] = useState(timeout);\n  const [closing, setClosing] = useState(false);\n  const [playState, setPlayState] = useState<AnimationPlayState>('running');\n\n  useEffect(() => {\n    timer.current = window.setTimeout(() => {\n      handleStartClose();\n    }, timeout);\n  }, [id, onClose, timeout]);\n\n  useEffect(() => {\n    if (ref.current) {\n      const el = ref.current;\n      const { height } = el.getBoundingClientRect();\n\n      updateHeight(id, height);\n    }\n  }, []);\n\n  const handleClearTimeout = () => {\n    setClosing(false);\n\n    clearTimeout(timer.current);\n    const remainingTime = wait - (Date.now() - now.current);\n\n    setWait(remainingTime);\n    setPlayState('paused');\n  };\n\n  const handleSetTimeout = () => {\n    timer.current = window.setTimeout(() => {\n      handleStartClose();\n    }, wait);\n\n    now.current = Date.now();\n    setPlayState('running');\n  };\n\n  const handleStartClose = () => {\n    setClosing(true);\n  };\n\n  const [vertical, horizontal] = position.split('-');\n\n  return (\n    <div\n      className={cls('lanting-toast-item', {\n        [`lanting-toast--${vertical}`]: vertical,\n        [`lanting-toast--${horizontal}`]: horizontal,\n      })}\n      onMouseEnter={handleClearTimeout}\n      onMouseLeave={handleSetTimeout}\n      ref={ref}\n      style={{ transform: `translateY(${offset}px)` }}\n    >\n      <ToastBar\n        id={id}\n        onStartClose={handleStartClose}\n        onClose={onClose}\n        close={close}\n        playState={playState}\n        showProgress={showProgress}\n        text={text}\n        closing={closing}\n      />\n    </div>\n  );\n};\n\nexport default Toaster;\n","import React, { useCallback, useState } from 'react';\nimport './style.scss';\nimport { createPortal } from 'react-dom';\nimport Toaster, { IToastConfig, Position } from './Toaster';\n\ninterface Props {\n  updateList: React.Dispatch<React.SetStateAction<IToastConfig[]>>;\n  list: IToastConfig[];\n}\n\nconst Toasts: React.FC<Props> = ({ updateList, list }) => {\n  const handleClose = useCallback((id: string) => {\n    updateList((state) => state.filter((item) => item.id !== id));\n  }, []);\n\n  const updateHeight = (id: string, height: number) => {\n    updateList((state) =>\n      state.map((item) => {\n        if (item.id === id) {\n          return { ...item, height };\n        }\n\n        return item;\n      })\n    );\n  };\n\n  const calcOffset = (id: string, position: Position) => {\n    const samePositionList = list.filter((it) => it.position === position);\n\n    const toastIndex = samePositionList.findIndex((it) => it.id === id);\n\n    const isTop = position.includes('top');\n\n    const offset = samePositionList\n      .slice(toastIndex + 1)\n      .reverse()\n      .reduce((a, b) => a + (b.height || 0) + 16, 0);\n\n    return offset * (isTop ? 1 : -1);\n  };\n\n  return createPortal(\n    <div className='lanting-toast'>\n      {list.map(({ id, ...config }) => {\n        const offset = calcOffset(id, config.position);\n\n        return (\n          <Toaster\n            key={id}\n            id={id}\n            {...config}\n            offset={offset}\n            onClose={handleClose}\n            updateHeight={updateHeight}\n          />\n        );\n      })}\n    </div>,\n    document.body\n  );\n};\n\nexport default Toasts;\n","import React, { createContext, ReactNode, useCallback, useState } from 'react';\nimport createUID from 'utils/createUID';\nimport { IToastConfig } from './Toaster';\nimport Toasts from './Toasts';\nimport './style.scss';\n\ninterface IContext {\n  toast: (text: ReactNode) => void;\n}\n\nexport const ToastContext = createContext<IContext>({} as IContext);\n\ninterface ToastProps {\n  children: ReactNode;\n}\n\nconst Toast: React.FC<ToastProps> = ({ children }) => {\n  const [list, setList] = useState<IToastConfig[]>([]);\n\n  const toast = useCallback(\n    (text: ReactNode, config?: IToastConfig) => {\n      const newConfig = { text, position: 'top', ...config } as IToastConfig;\n      const newList = [...list];\n\n      if (newConfig.id) {\n        const prevIndex = list.findIndex((item) => item.id === newConfig.id);\n\n        if (prevIndex !== -1 && newConfig.id) {\n          newList[prevIndex] = newConfig;\n        } else {\n          newList.push(newConfig);\n        }\n      } else {\n        const id = createUID();\n        newList.push({ ...newConfig, id });\n      }\n\n      setList(newList);\n    },\n    [list]\n  );\n\n  const context: IContext = {\n    toast,\n  };\n\n  return (\n    <ToastContext.Provider value={context}>\n      {children}\n      <Toasts list={list} updateList={setList} />\n    </ToastContext.Provider>\n  );\n};\n\nexport default Toast;\n"],"names":["createUID","ToastBar","id","text","showProgress","close","closing","playState","onClose","onStartClose","handleAnimationEnd","e","jsxs","cls","jsx","Icon","Toaster","offset","position","timeout","updateHeight","ref","useRef","now","timer","wait","setWait","useState","setClosing","setPlayState","useEffect","handleStartClose","el","height","handleClearTimeout","remainingTime","handleSetTimeout","vertical","horizontal","Toasts","updateList","list","handleClose","useCallback","state","item","calcOffset","samePositionList","it","toastIndex","isTop","a","b","createPortal","config","ToastContext","createContext","Toast","children","setList","context","newConfig","newList","prevIndex"],"mappings":"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"}