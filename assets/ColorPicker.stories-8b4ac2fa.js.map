{"version":3,"file":"ColorPicker.stories-8b4ac2fa.js","sources":["../../src/components/DropDown/index.tsx","../../src/components/Input/index.tsx","../../src/components/ ColorPicker/hooks/useColorDrag.ts","../../src/components/ ColorPicker/Slider.tsx","../../src/components/ ColorPicker/Picker.tsx","../../src/components/ ColorPicker/index.tsx"],"sourcesContent":["import Icon, { IconNames } from 'components/Icon';\nimport React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport './style.scss';\n\ninterface Props {\n  label?: string;\n  icon?: IconNames;\n  children: ReactNode;\n  visible?: boolean;\n  onVisibleChange?: (visible: boolean) => void;\n}\n\nconst DropDown: React.FC<Props> = ({\n  label,\n  icon,\n  children,\n  visible = false,\n  onVisibleChange,\n}) => {\n  const buttonRef = useRef<HTMLDivElement>(null);\n  const dropDownRef = useRef<HTMLDivElement>(null);\n  const [showDropDown, setShowDropDown] = useState(false);\n\n  useEffect(() => {\n    const dropDown = dropDownRef.current;\n    const button = buttonRef.current;\n\n    if (button && dropDown) {\n      const { left, top, height } = button.getBoundingClientRect();\n\n      dropDown.style.top = `${top + height}px`;\n      dropDown.style.left = `${Math.min(\n        left,\n        window.innerWidth - dropDown.offsetWidth - 20\n      )}px`;\n    }\n  }, [showDropDown, dropDownRef, buttonRef]);\n\n  useEffect(() => {\n    setShowDropDown(visible);\n  }, [visible]);\n\n  useEffect(() => {\n    const button = buttonRef.current;\n    const dropdown = dropDownRef.current;\n\n    if (button !== null && showDropDown) {\n      const handle = (event: MouseEvent) => {\n        const target = event.target as HTMLElement;\n\n        if (!button.contains(target) && !dropdown?.contains(target)) {\n          handleVisibleChange(false);\n        }\n      };\n      document.addEventListener('click', handle);\n\n      return () => {\n        document.removeEventListener('click', handle);\n      };\n    }\n  }, [dropDownRef, buttonRef, showDropDown]);\n\n  const handleVisibleChange = (v: boolean) => {\n    setShowDropDown(v);\n    if (onVisibleChange) {\n      onVisibleChange(v);\n    }\n  };\n\n  const handleClick = () => {\n    handleVisibleChange(true);\n  };\n\n  return (\n    <>\n      <div\n        ref={buttonRef}\n        onClick={handleClick}\n        className='lanting-dropdown-label'\n      >\n        {icon && <Icon name={icon} />}\n        {label && <span className='lanting-dropdown-label-text'>{label}</span>}\n        <Icon name='expand_more' />\n      </div>\n\n      {showDropDown &&\n        createPortal(\n          <div className='lanting-dropdown' ref={dropDownRef}>\n            {children}\n          </div>,\n          document.body\n        )}\n    </>\n  );\n};\n\nexport default DropDown;\n","import React, { forwardRef, InputHTMLAttributes } from 'react';\nimport cls from 'classnames';\nimport './style.scss';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  borderless?: boolean;\n}\n\nconst Input: React.FC<InputProps> = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, borderless, ...props }, ref) => {\n    const classNames = cls(\n      'lanting-input',\n      {\n        'lanting-input--borderless': borderless,\n      },\n      className\n    );\n\n    return <input ref={ref} className={classNames} {...props} />;\n  }\n);\n\nexport default Input;\n","import React, { RefObject, useState, useRef, useEffect } from 'react'\n\ntype EventType =\n  | MouseEvent\n  | React.MouseEvent<Element, MouseEvent>\n  | React.TouchEvent<Element>\n  | TouchEvent;\n\ntype EventHandle = (e: EventType) => void;\n\ninterface ColorDragProps {\n  containerRef: RefObject<HTMLElement>,\n  targetRef: RefObject<HTMLElement>,\n  direction?: 'x' | 'y'\n}\n\nfunction getPosition(e: EventType) {\n  const obj = 'touches' in e ? e.touches[0] : e;\n  const scrollXOffset =\n    document.documentElement.scrollLeft ||\n    document.body.scrollLeft ||\n    window.scrollX;\n  const scrollYOffset =\n    document.documentElement.scrollTop ||\n    document.body.scrollTop ||\n    window.scrollY;\n  return { pageX: obj.pageX - scrollXOffset, pageY: obj.pageY - scrollYOffset };\n}\n\nconst useColorDrag = ({ containerRef, targetRef, direction = 'x' }: ColorDragProps): [{ x: number, y: number }, EventHandle] => {\n  const [offsetValue, setOffsetValue] = useState({ x: 0, y: 0 })\n  const mouseMoveRef = useRef<EventHandle | null>(null)\n  const mouseUpRef = useRef<EventHandle | null>(null)\n\n  useEffect(\n    () => () => {\n      if (!mouseMoveRef.current || !mouseUpRef.current) return\n\n      document.removeEventListener('mousemove', mouseMoveRef.current);\n      document.removeEventListener('mouseup', mouseUpRef.current);\n      document.removeEventListener('touchmove', mouseMoveRef.current);\n      document.removeEventListener('touchend', mouseUpRef.current);\n\n      mouseMoveRef.current = null;\n      mouseUpRef.current = null;\n    },\n    [],\n  );\n\n  const updateOffset: EventHandle = (e) => {\n    if (!containerRef.current || !targetRef.current) return\n\n    const { pageX, pageY } = getPosition(e)\n\n    const {\n      x: rectX,\n      y: rectY,\n      width,\n      height,\n    } = containerRef.current.getBoundingClientRect();\n    const { width: targetWidth, height: targetHeight } =\n      targetRef.current.getBoundingClientRect();\n\n    const centerOffsetX = targetWidth / 2;\n    const centerOffsetY = targetHeight / 2;\n\n    const offsetX = Math.max(0, Math.min(pageX - rectX, width)) - centerOffsetX;\n    const offsetY =\n      Math.max(0, Math.min(pageY - rectY, height)) - centerOffsetY;\n\n    const calcOffset = {\n      x: offsetX,\n      y: direction === 'x' ? offsetValue.y : offsetY,\n    };\n\n    setOffsetValue(calcOffset);\n  }\n\n  const onDragEnd: EventHandle = (e) => {\n    e.preventDefault()\n    if (mouseUpRef.current && mouseMoveRef.current) {\n      document.removeEventListener('mouseup', mouseUpRef.current)\n      document.removeEventListener('mousemove', mouseMoveRef.current)\n      document.removeEventListener('touchend', mouseUpRef.current)\n      document.removeEventListener('touchmove', mouseMoveRef.current)\n\n      mouseMoveRef.current = null\n      mouseUpRef.current = null\n    }\n\n  }\n\n  const onDragMove: EventHandle = e => {\n    e.preventDefault();\n    updateOffset(e)\n  };\n\n  const onDragStart: EventHandle = e => {\n    updateOffset(e)\n\n    document.addEventListener('mouseup', onDragEnd)\n    document.addEventListener('mousemove', onDragMove)\n    document.addEventListener('touchend', onDragEnd)\n    document.addEventListener('touchmove', onDragMove)\n\n    mouseMoveRef.current = onDragMove\n    mouseUpRef.current = onDragEnd\n  }\n\n  return [offsetValue, onDragStart]\n}\n\nexport default useColorDrag","import React, { MouseEvent, useCallback, useRef, useState } from 'react';\nimport cls from 'classnames';\nimport './style.scss';\nimport useColorDrag from './hooks/useColorDrag';\n\ninterface Props {\n  className?: string;\n}\n\nconst Slider: React.FC<Props> = ({ className }) => {\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const handlerRef = useRef<HTMLDivElement>(null);\n\n  const [offset, onDragStart] = useColorDrag({\n    containerRef: sliderRef,\n    targetRef: handlerRef,\n    direction: 'x',\n  });\n\n  return (\n    <div\n      className={cls('lanting-color-picker-slider', className)}\n      ref={sliderRef}\n      onMouseDown={onDragStart}\n      onTouchStart={onDragStart}\n    >\n      <div style={{ position: 'absolute', left: offset.x }}>\n        <div\n          className='lanting-color-picker-handler lanting-color-picker-handler-sm'\n          ref={handlerRef}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useState } from 'react';\nimport './style.scss';\nimport Input from 'components/Input';\nimport Slider from './Slider';\n\ninterface Props {}\n\nconst Picker: React.FC<Props> = () => {\n  const [color, setColor] = useState('#fff');\n\n  const handleColorChange = (newColor: string) => {\n    setColor(newColor);\n  };\n\n  return (\n    <div className='lanting-color-picker'>\n      <div className='lanting-color-picker-basic-color'></div>\n      <div\n        className='lanting-color-picker-saturation'\n        style={{ backgroundColor: 'rgba(255,0,0)' }}\n      ></div>\n      <Slider className='lanting-color-picker-hue' />\n      <Slider className='lanting-color-picker-alpha' />\n      <div className='lanting-color-picker-input'>\n        <div>HEX</div>\n        <Input\n          value={color}\n          onChange={(e) => handleColorChange(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Picker;\n","import React from 'react';\nimport './style.scss';\nimport DropDown from 'components/DropDown';\nimport Input from 'components/Input';\nimport Picker from './Picker';\n\ninterface Props {}\n\nconst ColorPicker: React.FC<Props> = () => {\n  return (\n    <DropDown icon='format_color_text'>\n      <Picker />\n    </DropDown>\n  );\n};\n\nexport default ColorPicker;\n"],"names":["DropDown","label","icon","children","visible","onVisibleChange","buttonRef","useRef","dropDownRef","showDropDown","setShowDropDown","useState","useEffect","dropDown","button","left","top","height","dropdown","handle","event","target","handleVisibleChange","v","handleClick","jsxs","Fragment","jsx","Icon","createPortal","Input","forwardRef","className","borderless","props","ref","classNames","cls","getPosition","e","obj","scrollXOffset","scrollYOffset","useColorDrag","containerRef","targetRef","direction","offsetValue","setOffsetValue","mouseMoveRef","mouseUpRef","updateOffset","pageX","pageY","rectX","rectY","width","targetWidth","targetHeight","centerOffsetX","centerOffsetY","offsetX","offsetY","calcOffset","onDragEnd","onDragMove","Slider","sliderRef","handlerRef","offset","onDragStart","Picker","color","setColor","handleColorChange","newColor","ColorPicker"],"mappings":"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"}