{"version":3,"sources":["assets/images/bg.jpg","components/Apollo/index.tsx","components/Post/index.tsx","containers/Index/index.tsx","components/LantingEditor/StyleControls/StyleButton.tsx","components/Icon/index.tsx","components/LantingEditor/StyleControls/BlockStyle.tsx","components/LantingEditor/StyleControls/InlineStyle.tsx","components/LantingEditor/StyleControls/index.tsx","components/LantingEditor/Decorator/index.tsx","components/LantingEditor/Decorator/PrismDecorator.tsx","components/LantingEditor/components/Code/index.tsx","components/LantingEditor/BlockRenderMap/index.tsx","components/LantingEditor/utils/getCurrentBlock.tsx","components/LantingEditor/utils/hasSelectionInBlock.tsx","components/LantingEditor/utils/index.tsx","components/LantingEditor/utils/onTabInCode.tsx","components/LantingEditor/utils/hidePlaceholder.tsx","components/LantingEditor/utils/convertToState.tsx","components/LantingEditor/BlockStyleFn/index.tsx","components/LantingEditor/components/Image/index.tsx","components/LantingEditor/BlockRenderer/index.tsx","components/LantingEditor/index.tsx","containers/Edit/index.tsx","components/Nav/index.tsx","containers/App/index.tsx","index.tsx"],"names":["module","exports","client","ApolloClient","uri","Apollo","children","Post","className","Index","range","map","item","key","StyleButton","active","label","onToggle","onMouseDown","event","preventDefault","cls","Icon","style","props","onClick","styleMap","BlockStyle","editorState","onChange","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","getType","setImage","selectionState","contentStateWithEntity","createEntity","src","bg","entityKey","getLastCreatedEntityKey","contentStateWithPhoto","Modifier","applyEntity","newEditorState","EditorState","push","AtomicBlockUtils","insertAtomicBlock","toLowerCase","RichUtils","toggleBlockType","handleBlockStyleToggle","InlineStyle","inlineTypes","getCurrentInlineStyle","has","inlineType","toggleInlineStyle","StyleControls","decorators","this","highlighted","block","contentState","offset","tokenCount","type","text","getText","blockKey","getKey","decorations","Array","length","fill","includes","Immutable","List","preClassName","document","querySelector","closest","lang","exec","tokens","Prism","tokenize","languages","getLang","processToken","token","tokenId","resultId","targetArr","start","end","componentKey","ii","occupySlice","childOffset","i","content","childToken","split","LANGS","syntax","Code","useState","selectedLang","setSelectedLang","contentEditable","value","target","customBlockRender","Map","wrapper","blockRenderMap","DefaultDraftBlockRenderMap","merge","getCurrentBlock","startKey","hasSelectionInBlock","utils","onTabInCode","newState","isCollapsed","Draft","insertText","replaceText","hidePlaceholder","hasText","getBlockMap","first","convertToState","JSON","parse","console","log","createWithContent","convertFromRaw","e","blocksFromHTML","convertFromHTML","state","ContentState","createFromBlockArray","contentBlocks","entityMap","blockStyleFn","contentBlock","Image","getEntity","getEntityAt","getData","alt","blockRenderer","component","editable","LantingEditor","rawContent","editorRef","useRef","EmptyState","createEmpty","readOnly","setEditorState","useEffect","focusEditor","Prismjs","highlightAll","current","focus","handleStateChange","convertToRaw","handleMouseUp","useCallback","classnames","id","ref","placeholder","onFocus","addEventListener","onBlur","removeEventListener","onTab","blockRendererFn","handleKeyCommand","command","handleReturn","currentBlock","insertSoftNewline","Edit","Nav","pathname","useLocation","isEditPage","useMemo","classNames","to","App","localStorage","setItem","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a42ba8a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.f0ef5918.jpg\";","import React from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\ninterface ApolloProps {}\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000',\n});\n\nconst Apollo: React.FC<ApolloProps> = ({ children }) => {\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n\nexport default Apollo;\n","import React from 'react';\nimport './style.scss';\n\ninterface PostProps {}\n\nconst Post: React.FC<PostProps> = () => {\n  return (\n    <article className='lanting-post'>\n      <header className='lanting-post-header'>\n        <h3 className='lanting-post-title'>兰亭集序</h3>\n      </header>\n      <main className='lanting-post-content'>仰观宇宙之大，俯察品类之盛</main>\n      <footer className='lanting-post-footer'>2020年07月08日15:58:23</footer>\n    </article>\n  );\n};\n\nexport default Post;\n","import React, { useEffect } from 'react';\nimport { range } from 'lodash';\nimport './style.scss';\nimport Post from 'components/Post';\n\ninterface IndexProps {}\n\nconst Index: React.FC<IndexProps> = () => {\n  return (\n    <div className='index'>\n      {range(10).map((item) => (\n        <Post key={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { MouseEvent, ReactNode } from 'react';\nimport cls from 'classnames';\nimport './style.scss';\n\ninterface StyleButtonProps {\n  active: boolean;\n  className?: string;\n  label: ReactNode | string;\n  onToggle: () => void;\n}\n\nconst StyleButton: React.FC<StyleButtonProps> = ({\n  active,\n  className,\n  label,\n  onToggle,\n}) => {\n  const onMouseDown = (event: MouseEvent) => {\n    event.preventDefault();\n    onToggle();\n  };\n\n  return (\n    <div\n      onMouseDown={onMouseDown}\n      className={cls(\n        'stylecontrols-button',\n        {\n          'stylecontrols-button--active': active,\n        },\n        className\n      )}\n    >\n      {label}\n    </div>\n  );\n};\n\nexport default StyleButton;\n","import React, { CSSProperties, HTMLAttributes } from 'react';\nimport cls from 'classnames';\n\ninterface IconProps extends HTMLAttributes<HTMLElement> {\n  className?: string;\n  style?: CSSProperties;\n  children: string;\n}\n\nconst Icon: React.FC<IconProps> = ({\n  className,\n  children,\n  style,\n  onClick,\n  ...props\n}) => {\n  return (\n    <i\n      className={cls('material-icons', 'lanting-icon--clickable', className)}\n      style={style}\n      {...props}\n    >\n      {children}\n    </i>\n  );\n};\n\nexport default Icon;\n","import React from 'react';\nimport './style.scss';\nimport StyleButton from './StyleButton';\nimport { EditorState, RichUtils, Modifier, AtomicBlockUtils } from 'draft-js';\nimport Icon from 'components/Icon';\nimport bg from 'assets/images/bg.jpg';\n\ninterface BlockStyleProps {\n  editorState: EditorState;\n  onChange: (editorState: EditorState) => void;\n}\n\nconst styleMap = [\n  { label: 'H1', style: 'header-one' },\n  { label: 'H2', style: 'header-two' },\n  { label: 'H3', style: 'header-three' },\n  { label: <Icon>format_quote</Icon>, style: 'blockquote' },\n  { label: <Icon>format_list_bulleted</Icon>, style: 'unordered-list-item' },\n  { label: <Icon>format_list_numbered</Icon>, style: 'ordered-list-item' },\n  {\n    label: <Icon>code</Icon>,\n    style: 'code-block',\n  },\n  {\n    label: <Icon>image</Icon>,\n    style: 'image',\n  },\n];\n\nconst BlockStyle: React.FC<BlockStyleProps> = ({ editorState, onChange }) => {\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  const handleBlockStyleToggle = (blockType: string) => {\n    if (blockType === 'image') {\n      setImage();\n    } else {\n      onChange(RichUtils.toggleBlockType(editorState, blockType));\n    }\n  };\n\n  const setImage = () => {\n    const selectionState = editorState.getSelection();\n\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      'PHOTO',\n      'MUTABLE',\n      { src: bg }\n    );\n\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n    const contentStateWithPhoto = Modifier.applyEntity(\n      contentStateWithEntity,\n      selectionState,\n      entityKey\n    );\n\n    const newEditorState = EditorState.push(\n      editorState,\n      contentStateWithPhoto,\n      'apply-entity'\n    );\n\n    onChange(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' ')\n    );\n  };\n\n  return (\n    <>\n      {styleMap.map(({ label, style }) => (\n        <StyleButton\n          active={style === blockType}\n          className={`stylecontrols-${style.toLowerCase()}`}\n          key={style}\n          label={label}\n          onToggle={() => handleBlockStyleToggle(style)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default BlockStyle;\n","import React from 'react';\nimport './style.scss';\nimport StyleButton from './StyleButton';\nimport { EditorState, RichUtils } from 'draft-js';\nimport Icon from 'components/Icon';\n\ninterface InlineStyleProps {\n  editorState: EditorState;\n  onChange: (editorState: EditorState) => void;\n}\n\nconst styleMap = [\n  { label: <Icon>format_bold</Icon>, style: 'BOLD' },\n  { label: <Icon>format_italic</Icon>, style: 'ITALIC' },\n  { label: <Icon>format_underline</Icon>, style: 'UNDERLINE' },\n  { label: <Icon>format_strikethrough</Icon>, style: 'STRIKETHROUGH' },\n];\n\nconst InlineStyle: React.FC<InlineStyleProps> = ({ editorState, onChange }) => {\n  const inlineTypes = editorState.getCurrentInlineStyle();\n\n  const handleInlineStyleToggle = (inlineType: string) => {\n    onChange(RichUtils.toggleInlineStyle(editorState, inlineType));\n  };\n\n  return (\n    <>\n      {styleMap.map(({ label, style }) => (\n        <StyleButton\n          active={inlineTypes.has(style)}\n          key={style}\n          label={label}\n          onToggle={() => handleInlineStyleToggle(style)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default InlineStyle;\n","import React from 'react';\nimport './style.scss';\nimport BlockStyle from './BlockStyle';\nimport { EditorState } from 'draft-js';\nimport InlineStyle from './InlineStyle';\n\ninterface StyleControlsProps {\n  editorState: EditorState;\n  onChange: (editorState: EditorState) => void;\n}\n\nconst StyleControls: React.FC<StyleControlsProps> = ({\n  editorState,\n  onChange,\n}) => {\n  return (\n    <div className='stylecontrols'>\n      <InlineStyle editorState={editorState} onChange={onChange} />\n      <BlockStyle editorState={editorState} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default StyleControls;\n","import PrismDecorator from './PrismDecorator';\n\nconst decorators = new PrismDecorator();\n\nexport default decorators;\n","import { ContentBlock, ContentState } from 'draft-js';\nimport Prism from 'prismjs';\nimport React from 'react';\nimport Immutable from 'immutable';\n\ninterface PrismDecorator {\n  highlighted: {\n    [key: string]: any;\n  };\n}\n\nfunction getLang(lang: string) {\n  if (lang && Prism.languages[lang]) {\n    return Prism.languages[lang];\n  }\n\n  return Prism.languages['javascript'];\n}\n\nfunction occupySlice(\n  targetArr: any,\n  start: number,\n  end: number,\n  componentKey: string\n) {\n  for (var ii = start; ii < end; ii++) {\n    targetArr[ii] = componentKey;\n  }\n}\n\nclass PrismDecorator {\n  constructor() {\n    this.highlighted = {};\n  }\n\n  getDecorations(\n    block: ContentBlock,\n    contentState: ContentState\n  ): Immutable.List<string> {\n    let offset = 0,\n      tokenCount = 0;\n\n    const type = block.getType();\n    const text = block.getText();\n    const blockKey = block.getKey();\n\n    const decorations: Array<string> = Array(text.length).fill(null);\n\n    if (!['code-block'].includes(type)) return Immutable.List(decorations);\n\n    const preClassName = document\n      .querySelector(`code[data-offset-key*='${blockKey}']`)\n      ?.closest('pre[class*=language-]')?.className;\n\n    const lang = preClassName\n      ? /(?<=language-)\\w+$/.exec(preClassName)\n      : ['javascript'];\n\n    const tokens = Prism.tokenize(text, getLang(lang ? lang[0] : ''));\n\n    this.highlighted[blockKey] = {};\n\n    const processToken = (\n      decorations: Array<string>,\n      token: Prism.Token | string,\n      offset: number\n    ) => {\n      if (typeof token === 'string') {\n        return;\n      }\n\n      const tokenId = 'tk' + tokenCount++;\n      const resultId = blockKey + '-' + tokenId;\n\n      this.highlighted[blockKey][tokenId] = token;\n      occupySlice(decorations, offset, offset + token.length, resultId);\n\n      let childOffset = offset;\n      for (let i = 0; i < token.content.length; i++) {\n        const childToken = (token.content as string)[i];\n        processToken(decorations, childToken, childOffset);\n        childOffset += childToken.length;\n      }\n    };\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      processToken(decorations, token, offset);\n      offset += token.length;\n    }\n\n    return Immutable.List(decorations);\n  }\n\n  getComponentForKey(key: string): Function {\n    return (props: { type: any; children: React.ReactNode }) => (\n      <span className={`token ${props.type}`}>{props.children}</span>\n    );\n  }\n\n  getPropsForKey(key: string): any {\n    const [blockKey, tokenId] = key.split('-');\n    const token = this.highlighted[blockKey][tokenId];\n\n    return {\n      type: token.type,\n    };\n  }\n}\n\nexport default PrismDecorator;\n","import React, { useState, ChangeEvent } from 'react';\nimport './style.scss';\nimport Icon from 'components/Icon';\n\ninterface CodeProps {}\n\ninterface Lang {\n  label: string;\n  syntax: string;\n}\n\nconst LANGS: Lang[] = [\n  { label: 'Javascript', syntax: 'javascript' },\n  { label: 'CSS', syntax: 'css' },\n  { label: 'HTML', syntax: 'html' },\n  { label: 'Golang', syntax: 'golang' },\n  { label: 'C', syntax: 'c' },\n  { label: 'C++', syntax: 'cpp' },\n  { label: 'Bash', syntax: 'bas' },\n  { label: 'Java', syntax: 'java' },\n  { label: 'Typescript', syntax: 'ts' },\n  { label: 'React JSX ', syntax: 'jsx' },\n  { label: 'React TSX', syntax: 'tsx' },\n  { label: 'Git', syntax: 'git' },\n  { label: 'Json', syntax: 'json' },\n];\n\nconst Code: React.FC<CodeProps> = ({ children, ...props }) => {\n  const [selectedLang, setSelectedLang] = useState('javascript');\n\n  const handleLangChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedLang(event.target.value);\n  };\n\n  return (\n    <div className='prismjscode'>\n      <div className='prismjscode-header' contentEditable={false}>\n        <select\n          className='prismjscode-switch'\n          value={selectedLang}\n          onChange={handleLangChange}\n        >\n          {LANGS.map((lang) => (\n            <option value={lang.syntax} key={lang.syntax}>\n              {lang.label}\n            </option>\n          ))}\n        </select>\n        <Icon>description</Icon>\n      </div>\n      <pre className={`language-${selectedLang}`}>\n        <code {...props}>{children}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Code;\n","import React from 'react';\nimport { Map } from 'immutable';\nimport { DefaultDraftBlockRenderMap } from 'draft-js';\nimport Code from '../components/Code';\n\nconst customBlockRender = Map({\n  'code-block': {\n    wrapper: <Code />,\n  },\n});\n\nconst blockRenderMap = DefaultDraftBlockRenderMap.merge(customBlockRender);\n\nexport default blockRenderMap;\n","import { EditorState } from 'draft-js';\n\nconst getCurrentBlock = (editorState: EditorState) => {\n  const contentState = editorState.getCurrentContent();\n  const selection = editorState.getSelection();\n  const startKey = selection.getStartKey();\n  return contentState.getBlockForKey(startKey);\n};\n\nexport default getCurrentBlock;\n","import { EditorState } from 'draft-js';\nimport getCurrentBlock from './getCurrentBlock';\n\nconst hasSelectionInBlock = (type: string, editorState: EditorState) => {\n  const currentBlcok = getCurrentBlock(editorState);\n\n  return currentBlcok.getType() === type;\n};\n\nexport default hasSelectionInBlock;\n","import getCurrentBlock from './getCurrentBlock';\nimport hasSelectionInBlock from './hasSelectionInBlock';\nimport onTabInCode from './onTabInCode';\nimport hidePlaceholder from './hidePlaceholder';\nimport convertToState from './convertToState';\n\nconst utils = {\n  getCurrentBlock,\n  hasSelectionInBlock,\n  onTabInCode,\n  hidePlaceholder,\n  convertToState,\n};\n\nexport default utils;\n","import { KeyboardEvent } from 'react';\nimport Draft, { EditorState } from 'draft-js';\n\nconst onTabInCode = (event: KeyboardEvent<{}>, editorState: EditorState) => {\n  event.preventDefault();\n\n  const contentState = editorState.getCurrentContent();\n  const selection = editorState.getSelection();\n  const startKey = selection.getStartKey();\n  const currentBlock = contentState.getBlockForKey(startKey);\n  const text = currentBlock.getText();\n\n  const indention = '  ';\n\n  let newState = null;\n\n  if (selection.isCollapsed()) {\n    newState = Draft.Modifier.insertText(contentState, selection, indention);\n  } else {\n    newState = Draft.Modifier.replaceText(contentState, selection, indention);\n  }\n\n  return Draft.EditorState.push(editorState, newState, 'insert-characters');\n};\n\nexport default onTabInCode;\n","import { EditorState } from 'draft-js';\n\nconst hidePlaceholder = (editorState: EditorState) => {\n  const contentState = editorState.getCurrentContent();\n\n  if (!contentState.hasText()) {\n    return (\n      contentState\n        .getBlockMap()\n        .first()\n        .getType() !== 'unstyled'\n    );\n  }\n\n  return false;\n};\nexport default hidePlaceholder;\n","import {\n  convertFromHTML,\n  ContentState,\n  convertFromRaw,\n  EditorState,\n} from 'draft-js';\n\nconst convertToState = (content: string) => {\n  try {\n    const block = JSON.parse(content);\n    console.log(block);\n    return EditorState.createWithContent(convertFromRaw(block));\n  } catch (e) {\n    const blocksFromHTML = convertFromHTML(content);\n    const state = ContentState.createFromBlockArray(\n      blocksFromHTML.contentBlocks,\n      blocksFromHTML.entityMap\n    );\n    return EditorState.createWithContent(state);\n  }\n};\n\nexport default convertToState;\n","import { ContentBlock } from 'draft-js';\n\nconst blockStyleFn = (contentBlock: ContentBlock) => {\n  const type = contentBlock.getType();\n\n  if (type === 'blockquote') {\n    return 'myeditor-blockquote';\n  }\n\n  return '';\n};\n\nexport default blockStyleFn;\n","import React from 'react';\nimport flower from 'assets/images/flower.jpg';\nimport { ContentState, ContentBlock } from 'draft-js';\nimport './style.scss';\n\ninterface ImageProps {\n  contentState: ContentState;\n  block: ContentBlock;\n}\n\nconst Image: React.FC<ImageProps> = ({ contentState, block }) => {\n  console.log(contentState, block);\n  const { src } = contentState.getEntity(block.getEntityAt(0)).getData();\n\n  return <img src={src} alt='flower' className='lanting-editor-image' />;\n};\n\nexport default Image;\n","import { ContentBlock, EditorState } from 'draft-js';\nimport Image from '../components/Image';\n\nconst blockRenderer = (editorState: EditorState) => (\n  contentBlock: ContentBlock\n) => {\n  const type = contentBlock.getType();\n\n  if (type === 'atomic') {\n    return {\n      component: Image,\n      editable: false,\n    };\n  }\n\n  return null;\n};\n\nexport default blockRenderer;\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  KeyboardEvent,\n} from 'react';\nimport {\n  Editor,\n  EditorState,\n  DraftHandleValue,\n  RichUtils,\n  convertToRaw,\n  RawDraftContentState,\n} from 'draft-js';\nimport Prismjs from 'prismjs';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport classnames from 'classnames';\nimport { getSelectionRange } from './helpers';\nimport StyleControls from './StyleControls';\nimport decorators from './Decorator';\nimport blockRenderMap from './BlockRenderMap';\nimport utils from './utils';\nimport blockStyleFn from './BlockStyleFn';\nimport 'draft-js/dist/Draft.css';\nimport blockRenderer from './BlockRenderer';\nimport './style.scss';\n\nexport interface LantingEditorProps {\n  readOnly?: boolean;\n  rawContent?: string;\n  onChange?: (rawContent: RawDraftContentState) => void;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst LantingEditor: React.FC<LantingEditorProps> = ({\n  rawContent,\n  onChange,\n}) => {\n  const editorRef = useRef<Editor>(null);\n  const EmptyState = EditorState.createEmpty(decorators);\n  const [readOnly] = useState(false);\n  const [editorState, setEditorState] = useState<EditorState>(EmptyState);\n\n  useEffect(() => {\n    if (!readOnly) {\n      focusEditor();\n    }\n    Prismjs.highlightAll();\n  }, []);\n\n  useEffect(() => {\n    console.log(rawContent);\n    if (rawContent) {\n      setEditorState(utils.convertToState(rawContent));\n    }\n  }, [rawContent]);\n\n  const focusEditor = () => editorRef.current && editorRef.current.focus();\n\n  const handleStateChange = (editorState: EditorState) => {\n    const rawContent = convertToRaw(editorState.getCurrentContent());\n    setEditorState(editorState);\n    if (onChange) {\n      onChange(rawContent);\n    }\n  };\n\n  const handleKeyCommand = (\n    command: string,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  const getSelectionCoords = () => {\n    const selectionRange = getSelectionRange();\n    const editorBounds = document\n      .getElementById('lanting-editor')\n      ?.getBoundingClientRect();\n\n    if (\n      selectionRange &&\n      selectionRange.startOffset !== selectionRange.endOffset &&\n      editorBounds\n    ) {\n      const selectionBounds = selectionRange.getBoundingClientRect();\n\n      const x = (selectionBounds.right + selectionBounds.left) / 2;\n      const y = selectionBounds.top - 48;\n\n      return { x, y };\n    }\n\n    return null;\n  };\n\n  const handleMouseUp = useCallback(() => {\n    // if (pos) {\n    //   setInlineToolPos(pos)\n    //   setShowInlineTool(true)\n    // } else {\n    //   setShowInlineTool(false)\n    // }\n  }, []);\n\n  const handleFocus = () => {\n    document.addEventListener(\n      'selectionchange',\n      (handleMouseUp as unknown) as EventListener\n    );\n  };\n\n  const handleBlur = () => {\n    document.removeEventListener(\n      'selectionchange',\n      (handleMouseUp as unknown) as EventListener\n    );\n  };\n\n  const onTab = (event: React.KeyboardEvent) => {\n    if (utils.hasSelectionInBlock('code-block', editorState)) {\n      handleStateChange(utils.onTabInCode(event, editorState));\n    }\n  };\n\n  const handleReturn = (\n    event: KeyboardEvent,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    const currentBlock = utils.getCurrentBlock(editorState);\n\n    if (['blockquote', 'code-block'].includes(currentBlock.getType())) {\n      handleStateChange(RichUtils.insertSoftNewline(editorState));\n      return 'handled';\n    }\n\n    return 'not-handled';\n  };\n\n  return (\n    <div\n      className={classnames('lanting-editor', {\n        'lanting-editor-hideplaceholder': utils.hidePlaceholder(editorState),\n      })}\n      id='lanting-editor'\n    >\n      {!readOnly && (\n        <StyleControls onChange={handleStateChange} editorState={editorState} />\n      )}\n      <Editor\n        ref={editorRef}\n        readOnly={readOnly}\n        placeholder='Your Story'\n        onChange={handleStateChange}\n        editorState={editorState}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onTab={onTab}\n        blockRenderMap={blockRenderMap}\n        blockRendererFn={blockRenderer(editorState)}\n        blockStyleFn={blockStyleFn}\n        handleKeyCommand={handleKeyCommand}\n        handleReturn={handleReturn}\n      />\n    </div>\n  );\n};\n\nexport default LantingEditor;\n","import React from 'react';\nimport './style.scss';\nimport LantingEditor from 'components/LantingEditor';\n\ninterface EditProps {}\n\nconst Edit: React.FC<EditProps> = () => {\n  return (\n    <div className='edit'>\n      <LantingEditor />\n    </div>\n  );\n};\n\nexport default Edit;\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport './style.scss';\nimport { Link, useLocation } from 'react-router-dom';\nimport Icon from 'components/Icon';\n\ninterface NavProps {}\n\nconst Nav: React.FC<NavProps> = () => {\n  const { pathname } = useLocation();\n\n  const isEditPage = useMemo(() => {\n    return pathname === '/edit';\n  }, [pathname]);\n\n  return (\n    <div className={classNames(`lanting-nav`)}>\n      <div className='lanting-nav-inner'>\n        <div className='lanting-nav-title'>\n          <Link to='/' className='lanting-nav-link'>\n            <h2 className='lanting-nav-name'>兰亭</h2>\n          </Link>\n          <div className='lanting-nav-bio'>流觞曲水</div>\n        </div>\n        {!isEditPage && (\n          <Link className='lanting-nav-edit' to='/edit'>\n            <Icon>edit</Icon>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Index from 'containers/Index';\nimport Edit from 'containers/Edit';\nimport './style.scss';\nimport Nav from 'components/Nav';\n\nfunction App() {\n  useEffect(() => {\n    localStorage.setItem('color-mode', 'light');\n  }, []);\n\n  return (\n    <div className='app'>\n      <BrowserRouter>\n        <Nav />\n\n        <Route path='/' exact component={Index} />\n        <Switch>\n          <Route path='/edit' component={Edit} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Apollo from 'components/Apollo';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Apollo>\n      <App />\n    </Apollo>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}