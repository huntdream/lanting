{"version":3,"sources":["assets/images/bg.jpg","components/Icon/index.tsx","recoil/theme.ts","components/Nav/index.tsx","components/LantingEditor/StyleControls/StyleButton.tsx","components/LantingEditor/StyleControls/BlockStyle.tsx","components/LantingEditor/StyleControls/InlineStyle.tsx","components/LantingEditor/StyleControls/index.tsx","components/LantingEditor/Decorator/index.tsx","components/LantingEditor/Decorator/PrismDecorator.tsx","components/LantingEditor/components/Code/index.tsx","components/LantingEditor/BlockRenderMap/index.tsx","components/LantingEditor/utils/getCurrentBlock.tsx","components/LantingEditor/utils/hasSelectionInBlock.tsx","components/LantingEditor/utils/index.tsx","components/LantingEditor/utils/onTabInCode.tsx","components/LantingEditor/utils/hidePlaceholder.tsx","components/LantingEditor/utils/convertToState.tsx","components/LantingEditor/BlockStyleFn/index.tsx","components/LantingEditor/components/Image/index.tsx","components/LantingEditor/BlockRenderer/index.tsx","components/LantingEditor/index.tsx","components/Button/index.tsx","containers/Edit/index.tsx","components/Post/index.tsx","config/index.tsx","utils/history.ts","utils/request.ts","recoil/article.ts","containers/Feed/index.tsx","containers/Index/index.tsx","components/Input/index.tsx","containers/SignUp/index.tsx","recoil/user.ts","containers/SignIn/index.tsx","components/ErrorBoundary/index.tsx","containers/App/index.tsx","index.tsx"],"names":["module","exports","Icon","className","children","style","onClick","props","cls","undefined","themeState","atom","key","default","localStorage","getItem","Nav","useRecoilState","theme","setTheme","pathname","useLocation","isEditPage","useMemo","classNames","to","StyleButton","active","label","onToggle","onMouseDown","event","preventDefault","styleMap","BlockStyle","editorState","onChange","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","getType","setImage","selectionState","contentStateWithEntity","createEntity","src","bg","entityKey","getLastCreatedEntityKey","contentStateWithPhoto","Modifier","applyEntity","newEditorState","EditorState","push","AtomicBlockUtils","insertAtomicBlock","map","toLowerCase","RichUtils","toggleBlockType","handleBlockStyleToggle","InlineStyle","inlineTypes","getCurrentInlineStyle","has","inlineType","toggleInlineStyle","StyleControls","decorators","this","highlighted","block","contentState","offset","tokenCount","type","text","getText","blockKey","getKey","decorations","Array","length","fill","includes","Immutable","List","preClassName","document","querySelector","closest","lang","exec","tokens","Prism","tokenize","languages","getLang","processToken","token","tokenId","resultId","targetArr","start","end","componentKey","ii","occupySlice","childOffset","i","content","childToken","split","LANGS","syntax","Code","useState","selectedLang","setSelectedLang","contentEditable","value","target","customBlockRender","Map","wrapper","blockRenderMap","DefaultDraftBlockRenderMap","merge","getCurrentBlock","startKey","hasSelectionInBlock","utils","onTabInCode","newState","isCollapsed","Draft","insertText","replaceText","hidePlaceholder","hasText","getBlockMap","first","convertToState","JSON","parse","console","log","createWithContent","convertFromRaw","e","blocksFromHTML","convertFromHTML","state","ContentState","createFromBlockArray","contentBlocks","entityMap","blockStyleFn","contentBlock","Image","getEntity","getEntityAt","getData","alt","blockRenderer","component","editable","LantingEditor","rawContent","editorRef","useRef","EmptyState","createEmpty","readOnly","setEditorState","useEffect","focusEditor","Prismjs","highlightAll","current","focus","handleStateChange","handleMouseUp","useCallback","classnames","id","ref","placeholder","onFocus","addEventListener","onBlur","removeEventListener","onTab","blockRendererFn","handleKeyCommand","command","handleReturn","currentBlock","insertSoftNewline","Button","disabled","Edit","html","stateToHTML","Post","title","config","baseurl","history","createBrowserHistory","request","axios","create","baseURL","TOKEN_WHITELIST","interceptors","use","url","headers","Authorization","response","data","error","status","Promise","reject","articleState","count","total","articleListState","selectorFamily","get","param","a","params","catch","Feed","feed","useRecoilValue","size","after","post","Index","fallback","path","exact","Input","forwardRef","SignUp","initialValues","username","password","onSubmit","values","setSubmitting","finally","handleChange","handleSubmit","isSubmitting","htmlFor","autoComplete","name","userState","SignIn","setUser","useSetRecoilState","useHistory","then","user","setItem","replace","ErrorBoundary","errorInfo","React","Component","App","prevTheme","body","classList","add","documentElement","remove","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6024ebd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.f0ef5918.jpg\";","import React, { CSSProperties, HTMLAttributes } from 'react';\nimport cls from 'classnames';\nimport './style.scss';\n\ninterface IconProps extends HTMLAttributes<HTMLElement> {\n  className?: string;\n  style?: CSSProperties;\n  children: string;\n}\n\nconst Icon: React.FC<IconProps> = ({\n  className,\n  children,\n  style,\n  onClick,\n  ...props\n}) => {\n  return (\n    <i\n      className={cls(\n        'material-icons',\n        onClick ? 'lanting-icon--clickable' : undefined,\n        className\n      )}\n      onClick={onClick}\n      style={style}\n      {...props}\n    >\n      {children}\n    </i>\n  );\n};\n\nexport default Icon;\n","import { atom } from 'recoil';\n\nexport type Theme = 'light' | 'dark';\n\nexport const themeState = atom<Theme>({\n  key: 'theme',\n  default: (localStorage.getItem('theme') || 'light') as Theme,\n});\n","import React, { useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport './style.scss';\nimport { Link, useLocation } from 'react-router-dom';\nimport Icon from 'components/Icon';\nimport { useRecoilState } from 'recoil';\nimport { themeState } from 'recoil/theme';\n\ninterface NavProps {}\n\nconst Nav: React.FC<NavProps> = () => {\n  const [theme, setTheme] = useRecoilState(themeState);\n  const { pathname } = useLocation();\n\n  const isEditPage = useMemo(() => {\n    return pathname === '/edit';\n  }, [pathname]);\n\n  const toggleTheme = () => {\n    if (theme === 'dark') {\n      setTheme('light');\n    } else {\n      setTheme('dark');\n    }\n  };\n\n  return (\n    <div className={classNames(`lanting-nav`)}>\n      <div className='lanting-nav-inner'>\n        <div className='lanting-nav-title'>\n          <Link to='/' className='lanting-nav-link'>\n            <h2 className='lanting-nav-name'>兰亭</h2>\n          </Link>\n          <div className='lanting-nav-bio'>流觞曲水</div>\n        </div>\n        {!isEditPage && (\n          <Link className='lanting-nav-edit' to='/edit'>\n            <Icon>edit</Icon>\n          </Link>\n        )}\n        <span onClick={toggleTheme} className='lanting-nav-theme'>\n          {theme === 'dark' ? '🌙' : '☀️'}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { MouseEvent, ReactNode } from 'react';\nimport cls from 'classnames';\nimport './style.scss';\n\ninterface StyleButtonProps {\n  active: boolean;\n  className?: string;\n  label: ReactNode | string;\n  onToggle: () => void;\n}\n\nconst StyleButton: React.FC<StyleButtonProps> = ({\n  active,\n  className,\n  label,\n  onToggle,\n}) => {\n  const onMouseDown = (event: MouseEvent) => {\n    event.preventDefault();\n    onToggle();\n  };\n\n  return (\n    <div\n      onMouseDown={onMouseDown}\n      className={cls(\n        'stylecontrols-button',\n        {\n          'stylecontrols-button--active': active,\n        },\n        className\n      )}\n    >\n      {label}\n    </div>\n  );\n};\n\nexport default StyleButton;\n","import React from 'react';\nimport './style.scss';\nimport StyleButton from './StyleButton';\nimport { EditorState, RichUtils, Modifier, AtomicBlockUtils } from 'draft-js';\nimport Icon from 'components/Icon';\nimport bg from 'assets/images/bg.jpg';\n\ninterface BlockStyleProps {\n  editorState: EditorState;\n  onChange: (editorState: EditorState) => void;\n}\n\nconst styleMap = [\n  { label: 'H1', style: 'header-one' },\n  { label: 'H2', style: 'header-two' },\n  { label: 'H3', style: 'header-three' },\n  { label: <Icon>format_quote</Icon>, style: 'blockquote' },\n  { label: <Icon>format_list_bulleted</Icon>, style: 'unordered-list-item' },\n  { label: <Icon>format_list_numbered</Icon>, style: 'ordered-list-item' },\n  {\n    label: <Icon>code</Icon>,\n    style: 'code-block',\n  },\n  {\n    label: <Icon>image</Icon>,\n    style: 'image',\n  },\n];\n\nconst BlockStyle: React.FC<BlockStyleProps> = ({ editorState, onChange }) => {\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  const handleBlockStyleToggle = (blockType: string) => {\n    if (blockType === 'image') {\n      setImage();\n    } else {\n      onChange(RichUtils.toggleBlockType(editorState, blockType));\n    }\n  };\n\n  const setImage = () => {\n    const selectionState = editorState.getSelection();\n\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      'PHOTO',\n      'MUTABLE',\n      { src: bg }\n    );\n\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n    const contentStateWithPhoto = Modifier.applyEntity(\n      contentStateWithEntity,\n      selectionState,\n      entityKey\n    );\n\n    const newEditorState = EditorState.push(\n      editorState,\n      contentStateWithPhoto,\n      'apply-entity'\n    );\n\n    onChange(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' ')\n    );\n  };\n\n  return (\n    <>\n      {styleMap.map(({ label, style }) => (\n        <StyleButton\n          active={style === blockType}\n          className={`stylecontrols-${style.toLowerCase()}`}\n          key={style}\n          label={label}\n          onToggle={() => handleBlockStyleToggle(style)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default BlockStyle;\n","import React from 'react';\nimport './style.scss';\nimport StyleButton from './StyleButton';\nimport { EditorState, RichUtils } from 'draft-js';\nimport Icon from 'components/Icon';\n\ninterface InlineStyleProps {\n  editorState: EditorState;\n  onChange: (editorState: EditorState) => void;\n}\n\nconst styleMap = [\n  { label: <Icon>format_bold</Icon>, style: 'BOLD' },\n  { label: <Icon>format_italic</Icon>, style: 'ITALIC' },\n  { label: <Icon>format_underline</Icon>, style: 'UNDERLINE' },\n  { label: <Icon>format_strikethrough</Icon>, style: 'STRIKETHROUGH' },\n];\n\nconst InlineStyle: React.FC<InlineStyleProps> = ({ editorState, onChange }) => {\n  const inlineTypes = editorState.getCurrentInlineStyle();\n\n  const handleInlineStyleToggle = (inlineType: string) => {\n    onChange(RichUtils.toggleInlineStyle(editorState, inlineType));\n  };\n\n  return (\n    <>\n      {styleMap.map(({ label, style }) => (\n        <StyleButton\n          active={inlineTypes.has(style)}\n          key={style}\n          label={label}\n          onToggle={() => handleInlineStyleToggle(style)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default InlineStyle;\n","import React from 'react';\nimport './style.scss';\nimport BlockStyle from './BlockStyle';\nimport { EditorState } from 'draft-js';\nimport InlineStyle from './InlineStyle';\n\ninterface StyleControlsProps {\n  editorState: EditorState;\n  onChange: (editorState: EditorState) => void;\n}\n\nconst StyleControls: React.FC<StyleControlsProps> = ({\n  editorState,\n  onChange,\n}) => {\n  return (\n    <div className='stylecontrols'>\n      <InlineStyle editorState={editorState} onChange={onChange} />\n      <BlockStyle editorState={editorState} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default StyleControls;\n","import PrismDecorator from './PrismDecorator';\n\nconst decorators = new PrismDecorator();\n\nexport default decorators;\n","import { ContentBlock, ContentState } from 'draft-js';\nimport Prism from 'prismjs';\nimport React from 'react';\nimport Immutable from 'immutable';\n\ninterface PrismDecorator {\n  highlighted: {\n    [key: string]: any;\n  };\n}\n\nfunction getLang(lang: string) {\n  if (lang && Prism.languages[lang]) {\n    return Prism.languages[lang];\n  }\n\n  return Prism.languages['javascript'];\n}\n\nfunction occupySlice(\n  targetArr: any,\n  start: number,\n  end: number,\n  componentKey: string\n) {\n  for (var ii = start; ii < end; ii++) {\n    targetArr[ii] = componentKey;\n  }\n}\n\nclass PrismDecorator {\n  constructor() {\n    this.highlighted = {};\n  }\n\n  getDecorations(\n    block: ContentBlock,\n    contentState: ContentState\n  ): Immutable.List<string> {\n    let offset = 0,\n      tokenCount = 0;\n\n    const type = block.getType();\n    const text = block.getText();\n    const blockKey = block.getKey();\n\n    const decorations: Array<string> = Array(text.length).fill(null);\n\n    if (!['code-block'].includes(type)) return Immutable.List(decorations);\n\n    const preClassName = document\n      .querySelector(`code[data-offset-key*='${blockKey}']`)\n      ?.closest('pre[class*=language-]')?.className;\n\n    const lang = preClassName\n      ? /(?<=language-)\\w+$/.exec(preClassName)\n      : ['javascript'];\n\n    const tokens = Prism.tokenize(text, getLang(lang ? lang[0] : ''));\n\n    this.highlighted[blockKey] = {};\n\n    const processToken = (\n      decorations: Array<string>,\n      token: Prism.Token | string,\n      offset: number\n    ) => {\n      if (typeof token === 'string') {\n        return;\n      }\n\n      const tokenId = 'tk' + tokenCount++;\n      const resultId = blockKey + '-' + tokenId;\n\n      this.highlighted[blockKey][tokenId] = token;\n      occupySlice(decorations, offset, offset + token.length, resultId);\n\n      let childOffset = offset;\n      for (let i = 0; i < token.content.length; i++) {\n        const childToken = (token.content as string)[i];\n        processToken(decorations, childToken, childOffset);\n        childOffset += childToken.length;\n      }\n    };\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      processToken(decorations, token, offset);\n      offset += token.length;\n    }\n\n    return Immutable.List(decorations);\n  }\n\n  getComponentForKey(key: string): Function {\n    return (props: { type: any; children: React.ReactNode }) => (\n      <span className={`token ${props.type}`}>{props.children}</span>\n    );\n  }\n\n  getPropsForKey(key: string): any {\n    const [blockKey, tokenId] = key.split('-');\n    const token = this.highlighted[blockKey][tokenId];\n\n    return {\n      type: token.type,\n    };\n  }\n}\n\nexport default PrismDecorator;\n","import React, { useState, ChangeEvent } from 'react';\nimport './style.scss';\nimport Icon from 'components/Icon';\n\ninterface CodeProps {}\n\ninterface Lang {\n  label: string;\n  syntax: string;\n}\n\nconst LANGS: Lang[] = [\n  { label: 'Javascript', syntax: 'javascript' },\n  { label: 'CSS', syntax: 'css' },\n  { label: 'HTML', syntax: 'html' },\n  { label: 'Golang', syntax: 'golang' },\n  { label: 'C', syntax: 'c' },\n  { label: 'C++', syntax: 'cpp' },\n  { label: 'Bash', syntax: 'bas' },\n  { label: 'Java', syntax: 'java' },\n  { label: 'Typescript', syntax: 'ts' },\n  { label: 'React JSX ', syntax: 'jsx' },\n  { label: 'React TSX', syntax: 'tsx' },\n  { label: 'Git', syntax: 'git' },\n  { label: 'Json', syntax: 'json' },\n];\n\nconst Code: React.FC<CodeProps> = ({ children, ...props }) => {\n  const [selectedLang, setSelectedLang] = useState('javascript');\n\n  const handleLangChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedLang(event.target.value);\n  };\n\n  return (\n    <div className='prismjscode'>\n      <div className='prismjscode-header' contentEditable={false}>\n        <select\n          className='prismjscode-switch'\n          value={selectedLang}\n          onChange={handleLangChange}\n        >\n          {LANGS.map((lang) => (\n            <option value={lang.syntax} key={lang.syntax}>\n              {lang.label}\n            </option>\n          ))}\n        </select>\n        <Icon>description</Icon>\n      </div>\n      <pre className={`language-${selectedLang}`}>\n        <code {...props}>{children}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Code;\n","import React from 'react';\nimport { Map } from 'immutable';\nimport { DefaultDraftBlockRenderMap } from 'draft-js';\nimport Code from '../components/Code';\n\nconst customBlockRender = Map({\n  'code-block': {\n    wrapper: <Code />,\n  },\n});\n\nconst blockRenderMap = DefaultDraftBlockRenderMap.merge(customBlockRender);\n\nexport default blockRenderMap;\n","import { EditorState } from 'draft-js';\n\nconst getCurrentBlock = (editorState: EditorState) => {\n  const contentState = editorState.getCurrentContent();\n  const selection = editorState.getSelection();\n  const startKey = selection.getStartKey();\n  return contentState.getBlockForKey(startKey);\n};\n\nexport default getCurrentBlock;\n","import { EditorState } from 'draft-js';\nimport getCurrentBlock from './getCurrentBlock';\n\nconst hasSelectionInBlock = (type: string, editorState: EditorState) => {\n  const currentBlcok = getCurrentBlock(editorState);\n\n  return currentBlcok.getType() === type;\n};\n\nexport default hasSelectionInBlock;\n","import getCurrentBlock from './getCurrentBlock';\nimport hasSelectionInBlock from './hasSelectionInBlock';\nimport onTabInCode from './onTabInCode';\nimport hidePlaceholder from './hidePlaceholder';\nimport convertToState from './convertToState';\n\nconst utils = {\n  getCurrentBlock,\n  hasSelectionInBlock,\n  onTabInCode,\n  hidePlaceholder,\n  convertToState,\n};\n\nexport default utils;\n","import { KeyboardEvent } from 'react';\nimport Draft, { EditorState } from 'draft-js';\n\nconst onTabInCode = (event: KeyboardEvent<{}>, editorState: EditorState) => {\n  event.preventDefault();\n\n  const contentState = editorState.getCurrentContent();\n  const selection = editorState.getSelection();\n  const startKey = selection.getStartKey();\n  const currentBlock = contentState.getBlockForKey(startKey);\n  const text = currentBlock.getText();\n\n  const indention = '  ';\n\n  let newState = null;\n\n  if (selection.isCollapsed()) {\n    newState = Draft.Modifier.insertText(contentState, selection, indention);\n  } else {\n    newState = Draft.Modifier.replaceText(contentState, selection, indention);\n  }\n\n  return Draft.EditorState.push(editorState, newState, 'insert-characters');\n};\n\nexport default onTabInCode;\n","import { EditorState } from 'draft-js';\n\nconst hidePlaceholder = (editorState: EditorState) => {\n  const contentState = editorState.getCurrentContent();\n\n  if (!contentState.hasText()) {\n    return (\n      contentState\n        .getBlockMap()\n        .first()\n        .getType() !== 'unstyled'\n    );\n  }\n\n  return false;\n};\nexport default hidePlaceholder;\n","import {\n  convertFromHTML,\n  ContentState,\n  convertFromRaw,\n  EditorState,\n} from 'draft-js';\n\nconst convertToState = (content: string) => {\n  try {\n    const block = JSON.parse(content);\n    console.log(block);\n    return EditorState.createWithContent(convertFromRaw(block));\n  } catch (e) {\n    const blocksFromHTML = convertFromHTML(content);\n    const state = ContentState.createFromBlockArray(\n      blocksFromHTML.contentBlocks,\n      blocksFromHTML.entityMap\n    );\n    return EditorState.createWithContent(state);\n  }\n};\n\nexport default convertToState;\n","import { ContentBlock } from 'draft-js';\n\nconst blockStyleFn = (contentBlock: ContentBlock) => {\n  const type = contentBlock.getType();\n\n  if (type === 'blockquote') {\n    return 'myeditor-blockquote';\n  }\n\n  return '';\n};\n\nexport default blockStyleFn;\n","import React from 'react';\nimport flower from 'assets/images/flower.jpg';\nimport { ContentState, ContentBlock } from 'draft-js';\nimport './style.scss';\n\ninterface ImageProps {\n  contentState: ContentState;\n  block: ContentBlock;\n}\n\nconst Image: React.FC<ImageProps> = ({ contentState, block }) => {\n  console.log(contentState, block);\n  const { src } = contentState.getEntity(block.getEntityAt(0)).getData();\n\n  return <img src={src} alt='flower' className='lanting-editor-image' />;\n};\n\nexport default Image;\n","import { ContentBlock, EditorState } from 'draft-js';\nimport Image from '../components/Image';\n\nconst blockRenderer = (editorState: EditorState) => (\n  contentBlock: ContentBlock\n) => {\n  const type = contentBlock.getType();\n\n  if (type === 'atomic') {\n    return {\n      component: Image,\n      editable: false,\n    };\n  }\n\n  return null;\n};\n\nexport default blockRenderer;\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  KeyboardEvent,\n} from 'react';\nimport {\n  Editor,\n  EditorState,\n  DraftHandleValue,\n  RichUtils,\n  ContentState,\n} from 'draft-js';\nimport Prismjs from 'prismjs';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport classnames from 'classnames';\nimport { getSelectionRange } from './helpers';\nimport StyleControls from './StyleControls';\nimport decorators from './Decorator';\nimport blockRenderMap from './BlockRenderMap';\nimport utils from './utils';\nimport blockStyleFn from './BlockStyleFn';\nimport 'draft-js/dist/Draft.css';\nimport blockRenderer from './BlockRenderer';\nimport './style.scss';\n\nexport interface LantingEditorProps {\n  readOnly?: boolean;\n  rawContent?: string;\n  onChange?: (rawContent: ContentState) => void;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst LantingEditor: React.FC<LantingEditorProps> = ({\n  rawContent,\n  onChange,\n}) => {\n  const editorRef = useRef<Editor>(null);\n  const EmptyState = EditorState.createEmpty(decorators);\n  const [readOnly] = useState(false);\n  const [editorState, setEditorState] = useState<EditorState>(EmptyState);\n\n  useEffect(() => {\n    if (!readOnly) {\n      focusEditor();\n    }\n    Prismjs.highlightAll();\n  }, [readOnly]);\n\n  useEffect(() => {\n    if (rawContent) {\n      setEditorState(utils.convertToState(rawContent));\n    }\n  }, [rawContent]);\n\n  const focusEditor = () => editorRef.current && editorRef.current.focus();\n\n  const handleStateChange = (editorState: EditorState) => {\n    setEditorState(editorState);\n\n    if (onChange) {\n      onChange(editorState.getCurrentContent());\n    }\n  };\n\n  const handleKeyCommand = (\n    command: string,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  const getSelectionCoords = () => {\n    const selectionRange = getSelectionRange();\n    const editorBounds = document\n      .getElementById('lanting-editor')\n      ?.getBoundingClientRect();\n\n    if (\n      selectionRange &&\n      selectionRange.startOffset !== selectionRange.endOffset &&\n      editorBounds\n    ) {\n      const selectionBounds = selectionRange.getBoundingClientRect();\n\n      const x = (selectionBounds.right + selectionBounds.left) / 2;\n      const y = selectionBounds.top - 48;\n\n      return { x, y };\n    }\n\n    return null;\n  };\n\n  const handleMouseUp = useCallback(() => {\n    // if (pos) {\n    //   setInlineToolPos(pos)\n    //   setShowInlineTool(true)\n    // } else {\n    //   setShowInlineTool(false)\n    // }\n  }, []);\n\n  const handleFocus = () => {\n    document.addEventListener(\n      'selectionchange',\n      (handleMouseUp as unknown) as EventListener\n    );\n  };\n\n  const handleBlur = () => {\n    document.removeEventListener(\n      'selectionchange',\n      (handleMouseUp as unknown) as EventListener\n    );\n  };\n\n  const onTab = (event: React.KeyboardEvent) => {\n    if (utils.hasSelectionInBlock('code-block', editorState)) {\n      handleStateChange(utils.onTabInCode(event, editorState));\n    }\n  };\n\n  const handleReturn = (\n    event: KeyboardEvent,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    const currentBlock = utils.getCurrentBlock(editorState);\n\n    if (['blockquote', 'code-block'].includes(currentBlock.getType())) {\n      handleStateChange(RichUtils.insertSoftNewline(editorState));\n      return 'handled';\n    }\n\n    return 'not-handled';\n  };\n\n  return (\n    <div\n      className={classnames('lanting-editor', {\n        'lanting-editor-hideplaceholder': utils.hidePlaceholder(editorState),\n      })}\n      id='lanting-editor'\n    >\n      {!readOnly && (\n        <StyleControls onChange={handleStateChange} editorState={editorState} />\n      )}\n      <Editor\n        ref={editorRef}\n        readOnly={readOnly}\n        placeholder='Your Story'\n        onChange={handleStateChange}\n        editorState={editorState}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onTab={onTab}\n        blockRenderMap={blockRenderMap}\n        blockRendererFn={blockRenderer(editorState)}\n        blockStyleFn={blockStyleFn}\n        handleKeyCommand={handleKeyCommand}\n        handleReturn={handleReturn}\n      />\n    </div>\n  );\n};\n\nexport default LantingEditor;\n","import React, { CSSProperties, ButtonHTMLAttributes } from 'react';\nimport cls from 'classnames';\nimport './style.scss';\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  className?: string;\n  style?: CSSProperties;\n  disabled?: boolean;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  className,\n  disabled,\n  style,\n  ...props\n}) => {\n  return (\n    <button\n      {...props}\n      className={cls('lanting-button', className)}\n      style={style}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport './style.scss';\nimport LantingEditor from 'components/LantingEditor';\nimport { ContentState } from 'draft-js';\nimport { stateToHTML } from 'draft-js-export-html';\nimport Button from 'components/Button';\n\ninterface EditProps {}\n\nconst Edit: React.FC<EditProps> = () => {\n  const onChange = (rawContent: ContentState) => {\n    const html = stateToHTML(rawContent);\n\n    console.log(html);\n  };\n\n  const publish = () => {};\n\n  return (\n    <div className='lanting-edit'>\n      <div className='lanting-edit-header'>\n        <div></div>\n        <Button>Publish</Button>\n      </div>\n      <LantingEditor onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Edit;\n","import React from 'react';\nimport './style.scss';\nimport { IArticle } from 'recoil/article';\n\ninterface PostProps extends IArticle {}\n\nconst Post: React.FC<PostProps> = ({ id, title, content }) => {\n  return (\n    <article className='lanting-post'>\n      <header className='lanting-post-header'>\n        <h3 className='lanting-post-title'>{title}</h3>\n      </header>\n      <main className='lanting-post-content'>{content}</main>\n      <footer className='lanting-post-footer'></footer>\n    </article>\n  );\n};\n\nexport default Post;\n","interface Config {\n  baseurl: string;\n}\n\nconst config: Config = {\n  baseurl: 'http://localhost:4000/api/v1',\n};\n\nexport default config;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import axios from 'axios';\nimport config from 'config';\nimport history from './history';\n\nconst request = axios.create({\n  baseURL: config.baseurl,\n});\n\nconst TOKEN_WHITELIST = ['/auth/signin', '/auth/signup'];\n\nrequest.interceptors.request.use((config) => {\n  const token = localStorage.getItem('lanting-token');\n\n  if (token && config.url && !TOKEN_WHITELIST.includes(config.url)) {\n    config.headers.Authorization = 'Bearer ' + token;\n  }\n\n  return config;\n});\n\nrequest.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    console.log(error.response);\n    if (error.response.status === 401) {\n      history.push('/signin');\n    }\n    return Promise.reject(error.response.data);\n  }\n);\n\nexport default request;\n","import { atom, selectorFamily, SerializableParam } from 'recoil';\nimport request from 'utils/request';\n\nexport interface IArticle {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport type IFeed = Data<IArticle>;\n\nexport const articleState = atom<IFeed>({\n  key: 'article',\n  default: {\n    data: [],\n    count: 0,\n    total: 0,\n  },\n});\n\nexport const articleListState = selectorFamily<\n  IFeed,\n  Pagination & SerializableParam\n>({\n  key: 'ArticleList',\n  get: (param) => async ({ get }) => {\n    const response = await request\n      .get<any, IFeed>('/article', {\n        params: param,\n      })\n      .catch(() => {\n        return get(articleState);\n      });\n\n    return response;\n  },\n});\n","import React from 'react';\nimport Post from 'components/Post';\n\nimport { useRecoilValue } from 'recoil';\nimport { articleListState } from 'recoil/article';\n\nimport './style.scss';\n\ninterface FeedProps {}\n\nconst Feed: React.FC<FeedProps> = () => {\n  const feed = useRecoilValue(\n    articleListState({\n      size: 20,\n      after: 60,\n    })\n  );\n\n  console.log(feed);\n\n  return (\n    <div>\n      {feed.data.map((post) => (\n        <Post key={post.id} {...post} />\n      ))}\n    </div>\n  );\n};\n\nexport default Feed;\n","import React, { Suspense } from 'react';\nimport Nav from 'components/Nav';\nimport { Switch, Route } from 'react-router-dom';\nimport Edit from 'containers/Edit';\nimport './style.scss';\nimport Feed from 'containers/Feed';\n\ninterface IndexProps {}\n\nconst Index: React.FC<IndexProps> = () => {\n  return (\n    <div className='index'>\n      <Nav />\n\n      <Suspense fallback={<div>Loading</div>}>\n        <Switch>\n          <Route path='/' exact component={Feed} />\n          <Route path='/edit' component={Edit} />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { HTMLAttributes, forwardRef, InputHTMLAttributes } from 'react';\nimport cls from 'classnames';\nimport './style.scss';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input: React.FC<InputProps> = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <input ref={ref} className={cls('lanting-input', className)} {...props} />\n    );\n  }\n);\n\nexport default Input;\n","import React, { useMemo } from 'react';\nimport { Formik, Form } from 'formik';\nimport request from 'utils/request';\nimport Input from 'components/Input';\nimport './style.scss';\n\ninterface SignUpProps {}\n\ninterface FormValues {\n  username: string;\n  password: string;\n}\n\nconst SignUp: React.FC<SignUpProps> = () => {\n  const initialValues: FormValues = useMemo(\n    () => ({\n      username: '',\n      password: '',\n    }),\n    []\n  );\n\n  return (\n    <div className='lanting-signup'>\n      <Formik\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(values);\n\n          request\n            .post('/auth/signup', {\n              ...values,\n            })\n            .finally(() => {\n              setSubmitting(false);\n            });\n        }}\n        initialValues={initialValues}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <div className='lanting-signup-username'>\n              <label htmlFor='username'>Username</label>\n              <Input\n                autoComplete='off'\n                name='username'\n                id='username'\n                value={values.username}\n                onChange={handleChange}\n              />\n            </div>\n            <div className='lanting-signup-password'>\n              <label htmlFor='password'>Password</label>\n              <Input\n                autoComplete='off'\n                name='password'\n                id='password'\n                value={values.password}\n                onChange={handleChange}\n              />\n            </div>\n            <div>\n              <button type='submit' disabled={isSubmitting}>\n                Submit\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { atom } from 'recoil';\n\nexport interface IUser {\n  id: number;\n  username: string;\n  name: string;\n  email: string;\n  bio: string;\n}\n\nexport const userState = atom<IUser | null>({\n  key: 'user',\n  default: null,\n});\n","import React, { useMemo } from 'react';\nimport { Formik, Form } from 'formik';\nimport request from 'utils/request';\nimport Input from 'components/Input';\nimport './style.scss';\nimport { useHistory } from 'react-router-dom';\nimport { useSetRecoilState } from 'recoil';\nimport { userState, IUser } from 'recoil/user';\n\ninterface SignInProps {}\n\ninterface FormValues {\n  username: string;\n  password: string;\n}\n\ninterface SignInResponse extends IUser {\n  token: string;\n}\n\nconst SignIn: React.FC<SignInProps> = () => {\n  const setUser = useSetRecoilState(userState);\n  const history = useHistory();\n\n  const initialValues: FormValues = useMemo(\n    () => ({\n      username: '',\n      password: '',\n    }),\n    []\n  );\n\n  return (\n    <div className='lanting-signin'>\n      <Formik\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(values);\n\n          request\n            .post<any, SignInResponse>('/auth/signin', {\n              ...values,\n            })\n            .then(({ token, ...user }) => {\n              setUser(user);\n              localStorage.setItem('lanting-token', token);\n              history.replace('/');\n            })\n            .finally(() => {\n              setSubmitting(false);\n            });\n        }}\n        initialValues={initialValues}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <div className='lanting-signin-username'>\n              <label htmlFor='username'>Username</label>\n              <Input\n                autoComplete='off'\n                name='username'\n                id='username'\n                value={values.username}\n                onChange={handleChange}\n              />\n            </div>\n            <div className='lanting-signin-password'>\n              <label htmlFor='password'>Password</label>\n              <Input\n                autoComplete='off'\n                name='password'\n                id='password'\n                value={values.password}\n                onChange={handleChange}\n              />\n            </div>\n            <div>\n              <button type='submit' disabled={isSubmitting}>\n                Sign In\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React from 'react';\n\ninterface IProps {}\n\nclass ErrorBoundary extends React.Component<IProps> {\n  static getDerivedStateFromError() {\n    return 'Error';\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Index from 'containers/Index';\nimport './style.scss';\nimport { useRecoilState } from 'recoil';\nimport { themeState, Theme } from 'recoil/theme';\nimport SignUp from 'containers/SignUp';\nimport SignIn from 'containers/SignIn';\nimport ErrorBoundary from 'components/ErrorBoundary';\n\nfunction App() {\n  const [theme, setTheme] = useRecoilState(themeState);\n\n  useEffect(() => {\n    const prevTheme = (localStorage.getItem('theme') || 'light') as Theme;\n    setTheme(prevTheme);\n\n    document.body.classList.add('theme-fade');\n  }, [setTheme]);\n\n  useEffect(() => {\n    if (theme === 'light') {\n      document.documentElement.classList.remove('dark');\n      document.documentElement.classList.add('light');\n    } else {\n      document.documentElement.classList.remove('light');\n      document.documentElement.classList.add('dark');\n    }\n\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  return (\n    <ErrorBoundary>\n      <BrowserRouter>\n        <div className='app'>\n          <Switch>\n            <Route path='/signup' exact component={SignUp} />\n            <Route path='/signin' exact component={SignIn} />\n            <Route path='/' component={Index} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport './index.scss';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}