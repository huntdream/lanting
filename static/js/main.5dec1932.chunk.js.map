{"version":3,"sources":["components/Apollo/index.tsx","containers/Index/index.tsx","components/MyEditor/Elements/CodeElement.tsx","components/MyEditor/MarkButton/index.tsx","components/MyEditor/utils.ts","components/MyEditor/Toolbar/index.tsx","components/MyEditor/Elements/DefaultElement.tsx","components/MyEditor/index.tsx","containers/Edit/index.tsx","components/Nav/index.tsx","containers/App/index.tsx","index.tsx"],"names":["client","ApolloClient","uri","Apollo","children","Index","className","CodeElement","props","attributes","MarkButton","icon","active","onMouseDown","cls","isMarkActive","editor","format","marks","Editor","Toolbar","map","mark","event","preventDefault","removeMark","addMark","toggleMark","DefaultElement","element","type","MyEditor","useState","text","value","setValue","useMemo","withReact","createEditor","renderElement","useCallback","onChange","newValue","placeholder","onKeyDown","ctrlKey","console","log","key","Transforms","setNodes","bold","match","n","Text","isText","split","Edit","Nav","classNames","to","App","useEffect","localStorage","setItem","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dec1932.chunk.js","sourcesContent":["import React from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\ninterface ApolloProps {}\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000',\n});\n\nconst Apollo: React.FC<ApolloProps> = ({ children }) => {\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n\nexport default Apollo;\n","import React, { useEffect } from 'react';\nimport './style.scss';\n\ninterface IndexProps {}\n\nconst Index: React.FC<IndexProps> = () => {\n  return <div className='index'>Index</div>;\n};\n\nexport default Index;\n","import React from 'react';\nimport { RenderElementProps } from 'slate-react';\n\nconst CodeElement = (props: RenderElementProps) => {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  );\n};\n\nexport default CodeElement;\n","import React from 'react';\nimport cls from 'classnames';\nimport './style.scss';\n\ninterface MarkButtonProps {\n  format: string;\n  icon: string;\n  active: boolean;\n  onMouseDown: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}\n\nconst MarkButton: React.FC<MarkButtonProps> = ({\n  icon,\n  active,\n  onMouseDown,\n}) => {\n  return (\n    <i\n      className={cls('material-icons mark-button', {\n        'mark-button--active': active,\n      })}\n      onMouseDown={onMouseDown}\n    >\n      {icon}\n    </i>\n  );\n};\n\nexport default MarkButton;\n","import { Editor } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\nexport const isMarkActive = (editor: Editor & ReactEditor, format: string) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\nexport const toggleMark = (editor: Editor & ReactEditor, format: string) => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n","import React from 'react';\nimport MarkButton from '../MarkButton';\nimport './style.scss';\nimport { isMarkActive, toggleMark } from '../utils';\nimport { ReactEditor } from 'slate-react';\nimport { Editor } from 'slate';\n\ninterface ToolbarProps {\n  editor: Editor & ReactEditor;\n}\n\nconst Toolbar: React.FC<ToolbarProps> = ({ editor }) => {\n  const marks = [\n    { format: 'bold', icon: 'format_bold' },\n    { format: 'italic', icon: 'format_italic' },\n    { format: 'underline', icon: 'format_underlined' },\n    { format: 'code', icon: 'code' },\n    { format: 'heading-one', icon: 'looks_one' },\n    { format: 'heading-two', icon: 'looks_two' },\n    { format: 'block-quote', icon: 'format_quote' },\n    { format: 'numbered-list', icon: 'format_list_numbered' },\n    { format: 'bulleted-list', icon: 'format_list_bulleted' },\n  ];\n\n  return (\n    <div className='myeditor-toolbar'>\n      {marks.map((mark) => (\n        <MarkButton\n          format={mark.format}\n          icon={mark.icon}\n          active={isMarkActive(editor, mark.format)}\n          onMouseDown={(event) => {\n            event.preventDefault();\n            toggleMark(editor, mark.format);\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import { RenderElementProps } from 'slate-react';\nimport React from 'react';\n\nconst DefaultElement = ({\n  attributes,\n  children,\n  element,\n}: RenderElementProps) => {\n  switch (element.type) {\n    case 'block-quote':\n      return <blockquote {...attributes}>{children}</blockquote>;\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>;\n    case 'heading-one':\n      return <h1 {...attributes}>{children}</h1>;\n    case 'heading-two':\n      return <h2 {...attributes}>{children}</h2>;\n    case 'list-item':\n      return <li {...attributes}>{children}</li>;\n    case 'numbered-list':\n      return <ol {...attributes}>{children}</ol>;\n    default:\n      return <p {...attributes}>{children}</p>;\n  }\n};\n\nexport default DefaultElement;\n","import React, { useState, useMemo, KeyboardEvent, useCallback } from 'react';\nimport { createEditor, Node, Transforms, Text } from 'slate';\nimport { Slate, Editable, withReact, RenderElementProps } from 'slate-react';\nimport './style.scss';\nimport CodeElement from './Elements/CodeElement';\nimport Toolbar from './Toolbar';\nimport DefaultElement from './Elements/DefaultElement';\n\ninterface MyEditorProps {}\n\nconst MyEditor: React.FC<MyEditorProps> = () => {\n  const [value, setValue] = useState<Node[]>([\n    {\n      type: 'paragraph',\n      children: [{ text: '' }],\n    },\n  ]);\n\n  const editor = useMemo(() => withReact(createEditor()), []);\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLDivElement>) => {\n    if (event.ctrlKey) {\n      console.log(event.key);\n\n      switch (event.key) {\n        case 'b':\n          event.preventDefault();\n\n          Transforms.setNodes(\n            editor,\n            { bold: true },\n            { match: (n) => Text.isText(n), split: true }\n          );\n          break;\n      }\n    }\n  };\n\n  const renderElement = useCallback((props: RenderElementProps) => {\n    switch (props.element.type) {\n      case 'code':\n        return <CodeElement {...props} />;\n      default:\n        return <DefaultElement {...props} />;\n    }\n  }, []);\n\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={(newValue) => setValue(newValue)}\n    >\n      <Toolbar editor={editor} />\n      <Editable\n        className='my-editor'\n        placeholder='Tell a story...'\n        renderElement={renderElement}\n        onKeyDown={handleKeyDown}\n      />\n    </Slate>\n  );\n};\n\nexport default MyEditor;\n","import React from 'react';\nimport './style.scss';\nimport MyEditor from 'components/MyEditor';\n\ninterface EditProps {}\n\nconst Edit: React.FC<EditProps> = () => {\n  return (\n    <div className='edit'>\n      <MyEditor />\n    </div>\n  );\n};\n\nexport default Edit;\n","import React from 'react';\nimport classNames from 'classnames';\nimport './style.scss';\nimport { Link } from 'react-router-dom';\n\ninterface NavProps {}\n\nconst Nav: React.FC<NavProps> = () => {\n  return (\n    <div className={classNames(`lanting-nav`)}>\n      <div className='lanting-nav-inner'>\n        <div className='lanting-nav-title'>\n          <Link to='/' className='lanting-nav-link'>\n            <h2 className='lanting-nav-name'>兰亭</h2>\n          </Link>\n          <div className='lanting-nav-bio'>不知老之將至</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Index from 'containers/Index';\nimport Edit from 'containers/Edit';\nimport './style.scss';\nimport Nav from 'components/Nav';\n\nfunction App() {\n  useEffect(() => {\n    localStorage.setItem('color-mode', 'light');\n  }, []);\n\n  return (\n    <div className='app'>\n      <BrowserRouter>\n        <Nav />\n\n        <Route path='/' exact component={Index} />\n        <Switch>\n          <Route path='/new' component={Edit} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Apollo from 'components/Apollo';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Apollo>\n      <App />\n    </Apollo>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}