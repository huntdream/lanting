{"version":3,"file":"index-4a9f4f63.js","sources":["../../src/hooks/useHover.tsx","../../src/components/Icon/index.tsx"],"sourcesContent":["import React, { ReactNode, useCallback } from 'react';\nimport { useMemo, useState } from 'react';\nimport { IS_TOUCH_DEVICE } from 'utils/platform';\n\nexport type EventType =\n  | MouseEvent\n  | React.MouseEvent<Element, MouseEvent>\n  | React.TouchEvent<Element>\n  | TouchEvent;\n\ntype EventHandle = (e: EventType) => void;\n\ntype Events = 'onMouseEnter' | 'onMouseLeave' | 'onTouchStart' | 'onTouchEnd';\n\nconst useHover = <T extends HTMLElement>(): [\n  Record<Events, EventHandle>,\n  ReactNode\n] => {\n  const [show, setShow] = useState(false);\n  const isTouch = IS_TOUCH_DEVICE;\n\n  const handleEnter: EventHandle = useCallback((e) => {\n    if (isTouch && e.type === 'mouseenter') return;\n    setShow(true);\n  }, []);\n\n  const handleLeave: EventHandle = useCallback((e) => {\n    if (isTouch && e.type === 'mouseleave') return;\n\n    setShow(false);\n  }, []);\n\n  const events = {\n    onTouchStart: handleEnter,\n    onTouchEnd: handleLeave,\n    onMouseEnter: handleEnter,\n    onMouseLeave: handleLeave,\n  };\n\n  const overlay = useMemo(() => {\n    return show && <div className='hover-effect' />;\n  }, [show]);\n\n  return [events, overlay];\n};\n\nexport default useHover;\n","import React, {\n  CSSProperties,\n  HTMLAttributes,\n  MouseEvent,\n  TouchEvent,\n} from 'react';\nimport cls from 'classnames';\nimport './style.scss';\nimport useHover from 'hooks/useHover';\nimport icons from './icons';\n\nexport type IconNames = keyof typeof icons;\n\ninterface IconProps extends HTMLAttributes<HTMLElement> {\n  className?: string;\n  size?: number | string;\n  style?: CSSProperties;\n  clickable?: boolean;\n  round?: boolean;\n  name: IconNames;\n}\n\nconst Icon: React.FC<IconProps> = ({\n  className,\n  style,\n  size = 24,\n  round,\n  name,\n  clickable,\n  onClick,\n  onMouseEnter,\n  onMouseLeave,\n  onTouchStart,\n  onTouchEnd,\n  ...props\n}) => {\n  const [hoverEvents, overlay] = useHover();\n  const SVGIcon = icons[name];\n\n  const showOverlay = onClick || clickable;\n\n  const handleMouseEnter = (e: MouseEvent<HTMLElement>) => {\n    hoverEvents.onMouseEnter(e);\n    onMouseEnter?.(e);\n  };\n\n  const handleMouseLeave = (e: MouseEvent<HTMLElement>) => {\n    hoverEvents.onMouseLeave(e);\n    onMouseLeave?.(e);\n  };\n\n  const handleTouchStart = (e: TouchEvent<HTMLElement>) => {\n    hoverEvents.onTouchStart(e);\n    onTouchStart?.(e);\n  };\n\n  const handleTouchEnd = (e: TouchEvent<HTMLElement>) => {\n    hoverEvents.onTouchEnd(e);\n    onTouchEnd?.(e);\n  };\n\n  return (\n    <i\n      className={cls(\n        'lanting-icon',\n        showOverlay ? 'lanting-icon--clickable' : undefined,\n        className,\n        {\n          'lanting-icon-round': round,\n        }\n      )}\n      onClick={onClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onTouchStart={handleTouchStart}\n      onTouchEnd={handleTouchEnd}\n      {...props}\n    >\n      {SVGIcon && <SVGIcon width={size} height={size} fill='currentColor' />}\n      {showOverlay && overlay}\n    </i>\n  );\n};\n\nexport default Icon;\n"],"names":["useHover","show","setShow","useState","isTouch","IS_TOUCH_DEVICE","handleEnter","useCallback","e","handleLeave","events","overlay","useMemo","jsx","Icon","className","style","size","round","name","clickable","onClick","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","props","hoverEvents","SVGIcon","icons","showOverlay","handleMouseEnter","handleMouseLeave","handleTouchStart","handleTouchEnd","jsxs","cls"],"mappings":"0KAcA,MAAMA,EAAW,IAGZ,CACH,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAS,EAAK,EAChCC,EAAUC,EAEVC,EAA2BC,cAAaC,GAAM,CAC9CJ,GAAWI,EAAE,OAAS,cAC1BN,EAAQ,EAAI,CACd,EAAG,CAAE,CAAA,EAECO,EAA2BF,cAAaC,GAAM,CAC9CJ,GAAWI,EAAE,OAAS,cAE1BN,EAAQ,EAAK,CACf,EAAG,CAAE,CAAA,EAECQ,EAAS,CACb,aAAcJ,EACd,WAAYG,EACZ,aAAcH,EACd,aAAcG,CAAA,EAGVE,EAAUC,EAAAA,QAAQ,IACfX,GAAQY,EAAAA,IAAC,MAAI,CAAA,UAAU,cAAe,CAAA,EAC5C,CAACZ,CAAI,CAAC,EAEF,MAAA,CAACS,EAAQC,CAAO,CACzB,ECtBAG,EAAA,CAAA,CAAmC,UAAAC,EACjC,MAAAC,EACA,KAAAC,EAAA,GACO,MAAAC,EACP,KAAAC,EACA,UAAAC,EACA,QAAAC,EACA,aAAAC,EACA,aAAAC,EACA,aAAAC,EACA,WAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAhB,CAAA,EAAAX,EAAA,EACA4B,EAAAC,EAAAV,CAAA,EAEAW,EAAAT,GAAAD,EAEAW,EAAA,GAAA,CACEJ,EAAA,aAAA,CAAA,EACAL,GAAA,MAAAA,EAAA,EAAgB,EAGlBU,EAAA,GAAA,CACEL,EAAA,aAAA,CAAA,EACAJ,GAAA,MAAAA,EAAA,EAAgB,EAGlBU,EAAA,GAAA,CACEN,EAAA,aAAA,CAAA,EACAH,GAAA,MAAAA,EAAA,EAAgB,EAGlBU,EAAA,GAAA,CACEP,EAAA,WAAA,CAAA,EACAF,GAAA,MAAAA,EAAA,EAAc,EAGhB,OAAAU,EAAA,KACE,IAAC,CAAA,UAAAC,EACY,eACTN,EAAA,0BAAA,OAC0Cf,EAC1C,CACA,qBAAAG,CACwB,CACxB,EACF,QAAAG,EACA,aAAAU,EACc,aAAAC,EACA,aAAAC,EACA,WAAAC,EACF,GAAAR,EACR,SAAA,CAEHE,GAAAf,EAAAA,IAAAe,EAAA,CAAA,MAAAX,EAAA,OAAAA,EAAA,KAAA,eAAA,EAAmEa,GAAAnB,CACpD,CAAA,CAAA,CAGtB"}